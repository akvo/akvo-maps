events {
  worker_connections 128;
}

http {

  lua_package_path '~/lua/?.lua;;';

  resolver 8.8.8.8;

  # cache for discovery metadata documents
  lua_shared_dict discovery 1m;

  # cache for sessions
  lua_shared_dict sessions 10m;

  server {
    listen 80;

    # https://github.com/pingidentity/lua-resty-openidc/issues/33
    # https://github.com/pingidentity/lua-resty-openidc/wiki
    set $session_storage shm;
    set $session_shm_store sessions;

    location / {

      if ( $request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS, POST';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Keep-Alive,User-Agent,If-Modified-Since,Cache-Control,Content-Type';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Content-Length' '0';
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        return 200;
      }

      if ( $request_method = 'POST') {
        access_by_lua '

            local opts = {
              introspection_endpoint="https://kc.akvotest.org/auth/realms/akvo/protocol/openid-connect/token/introspect",
              introspection_token_param_name="token",
              client_id = "openresty",
              client_secret = "cbb77410-8736-4a15-b539-68cd38478610",
              ssl_verify = "no"
            }

            -- call instrospect
            local res, err = require("resty.openidc").introspect(opts)

            if err or not res then
              ngx.status = 403
              ngx.say(err and err or "No access_token provided")
              ngx.exit(ngx.HTTP_FORBIDDEN)
            end

            ngx.req.set_header("X-USER", res.email)
        ';
      }

      proxy_pass http://akvo-tiler:4000/;

    }

  }
}
