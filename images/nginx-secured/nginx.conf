events {
  worker_connections 128;
}

http {

  error_log stderr debug;

  lua_package_path '~/lua/?.lua;;';

  resolver 8.8.8.8;

  # cache for discovery metadata documents
  lua_shared_dict discovery 1m;

  # cache for sessions
  lua_shared_dict sessions 10m;

  server {
    listen 80;

    # https://github.com/pingidentity/lua-resty-openidc/issues/33
    # https://github.com/pingidentity/lua-resty-openidc/wiki
    set $session_storage shm;
    set $session_shm_store sessions;

    location / {

      if ( $request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS, POST';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Keep-Alive,User-Agent,If-Modified-Since,Cache-Control,Content-Type';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Content-Length' '0';
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        return 200;
      }

      if ( $request_method = 'POST') {

        access_by_lua '


--          --
--          -- DO INTROSPECTION (TODO: do this only once)
--          --
--
--          local opts = {
--            introspection_endpoint="https://kc.akvotest.org/auth/realms/akvo/protocol/openid-connect/token/introspect",
--            introspection_token_param_name="token",
--            client_id = "openresty",
--            client_secret = "cbb77410-8736-4a15-b539-68cd38478610",
--            ssl_verify = "no"
--          }
--
--          -- call instrospect
--          ngx.log(ngx.DEBUG, "XXX doing intronspection")
--          local res, err = require("resty.openidc").introspect(opts)
--
--          if err or not res then
--            ngx.status = 403
--            ngx.say(err and err or "No access_token provided")
--            ngx.exit(ngx.HTTP_FORBIDDEN)
--          end

 
          --
          -- DO VERIFICATION
          --

          local opts = {
            secret = [[-----BEGIN CERTIFICATE-----
MIIClzCCAX8CBgFYtUXLgDANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDARha3ZvMB4XDTE2MTEz
MDEyNDUwMFoXDTI2MTEzMDEyNDY0MFowDzENMAsGA1UEAwwEYWt2bzCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBAKk9y53Xccnco9fnJWcHLBVYrABIIJRzEG3CYKM4ZQwt7xxVdm//sSKh
BELQuegoHTxnuC1cAwXDTqeWttzoXlT82kwHa9icDalYPDnnp9G2tnGvnwcklyclBD9qppSFuQK+
5HsakU/i4Rggn94gNwY7NqPzyB+RLuVdwGrm52TtYap4u1VR6RdEHS5n1QgViuhaMaxKnnUbjxRy
6F+Bhd7VE5Pnaz6BMHt03/yelCAgKdUGka/oRlcirCH9II67vAK8xXC32bh9tWSSekFrhRghRXvd
Cglgty3U88mAeW8qt8/deRPTHhB9M62kzwrNPznpc7s46VFUELMugTScBMMCAwEAATANBgkqhkiG
9w0BAQsFAAOCAQEApDNG+5Hhx6oL3kBUxT16ivIAxOVRJYn11qu1tKvq3PoSx6ie0xx+NF2X0eem
FFmt4d4a+OA47kjIaxzu45RqyOoAb2yLQR/bS6gZpAgstiFgOJhVefMDWKCyq/1LvwSFvc17TUYi
xpbBqiIceaAywxRki7ofjSmXKxkgtdLl3sO/XYtQuGckguVjfLXtjOshSr+Mz9E/jeLlDOCvpb0M
0FG64F3UDB5VUUgxu0Te3AL4zHhj/9xTlacrHIjqhfkHD7gHnP/nYWGSCL4XBNJbnGrmTmIi2vve
k4DnkCHTsTp5JQgqdARegfu57IoYgy2VOgT4W9ZrC2Bb1NHq1g+W/w==
-----END CERTIFICATE-----]]
          }

          -- Verify bearer
          ngx.log(ngx.DEBUG, "XXX doing verification")
          local res, err = require("resty.openidc").bearer_jwt_verify(opts)

          if err or not res then
            ngx.status = 403
            if err then
              ngx.log(ngx.DEBUG, "XXX err is: ", err)
            end
            ngx.say(err and err or "No access_token provided")
            ngx.exit(ngx.HTTP_FORBIDDEN)
          end

          ngx.log(ngx.DEBUG, "XXX res.email is: ", res.email)

          ngx.req.set_header("X-USER", res.email)
        ';
      }

      proxy_pass http://akvo-varnish/;

    }

  }
}
